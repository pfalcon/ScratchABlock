#!/bin/bash

failed() {
    echo "TESTS FAILED!"
    exit 1
}

if [ -z "$1" -o "$1" == "unit" ]; then
    echo "=== test_unit ==="
    python3 -m nose --version || nose_missing=1
    if [ -z "$nose_missing" ]; then
        python3 -m nose -v || failed
    fi
fi

test_roundtrip() {
    echo "=== test_roundtrip ==="
    for f in tests/pseudoc-roundtrip/*.lst; do
        echo $f
        ./parse_asm.py --roundtrip --addr-width=2 --inst-indent=1 $f > $f.out || failed
        diff -u $f.exp $f.out || failed
    done
}

test_dump_c() {
    echo "=== test_dump_c ==="
    for f in tests/dump-c/*.lst; do
        echo $f
        ./dump_c.py $f > $f.out || failed
        diff -u $f.exp $f.out || failed
    done
}

test_xform() {
    echo "=== test_xform ==="

    pat='*'
    if [ ! -z "$1" ]; then
        pat="$1"
    fi

    for f in tests/$pat.lst; do
        echo $f
        ./apply_xform.py --debug --annotate-calls --funcdb=none --format=none $f || failed
        diff -u $f.exp.bb $f.out.bb || failed
        if [ -f $f.exp.dot ]; then
            diff -u $f.exp.dot $f.out.dot || failed
        fi
    done
}

test_decomp() {
    echo "=== test_decomp ==="
    for dir in tests/decomp/*; do
        if [ -d $dir ]; then
            echo $dir
            #dir=$(dirname $f)
            rm -f $dir/funcdb.yaml
            ./apply_xform.py --log-level=WARNING --script script_decompile --format=c $dir || failed
            rm -f $dir/funcdb.yaml
            ./apply_xform.py --log-level=ERROR --script script_decompile --format=c \
                --no-dead --no-comments --output-suffix=.out.clean $dir || failed
            for f in $dir/*.lst; do
                diff -u $f.exp $f.out || failed
                diff -u $f.exp.clean $f.out.clean || failed
            done
        fi
    done
}

test_cfg2pseudoc() {
    echo "=== test_cfg2pseudoc ==="
    for f in tests/cfg2pseudoc/*.dot; do
        if echo $f | grep -q -E '(0|out)\.dot'; then
            continue
        fi
        echo $f
        ./sabl_cfg2pseudoc.py $f > $f.lst || failed
        diff -u $f.lst.exp $f.lst || failed
        ./apply_xform.py --debug --funcdb=none $f.lst >/dev/null
    done
}

# Be sure to remove any older test output, to miss a case when no new output
# is produced.
find tests -name '*.out*' -exec rm {} \;

if [ -z "$1" -o "$1" == "roundtrip" ]; then
    test_roundtrip
fi
if [ -z "$1" -o "$1" == "dump_c" ]; then
    test_dump_c
fi
if [ -z "$1" -o "$1" == "xform" ]; then
    test_xform $2
fi
if [ -z "$1" -o "$1" == "decomp" ]; then
    test_decomp
fi
if [ -z "$1" -o "$1" == "cfg2pseudoc" ]; then
    test_cfg2pseudoc
fi

echo "TESTS PASSED"
if [ -n "$nose_missing" ]; then
    echo
    echo "WARNING: unit tests were not run due to missing 'nose' package for python3"
fi
